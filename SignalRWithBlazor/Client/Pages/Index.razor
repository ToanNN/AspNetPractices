@page "/"
@inject NavigationManager NavigationManager;
@using Microsoft.AspNetCore.SignalR.Client
@implements IAsyncDisposable
<PageTitle>Index</PageTitle>

<div class="form-group">
    <label>
        User: <input @bind="userInput"/>
    </label>
</div>
<div class="form-group">
    <label>
        Message: <input @bind="messageInput" size="50"/>
    </label>
</div>

<button @onclick="Send" disabled="@(!IsConnected)">Send</button>

<hr/>
<ul id="messagesList">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code
{
    private HubConnection? hubConnection;
    private readonly List<string> messages = new();
    private string? userInput;
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri("/chathub")).Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMessage = $"{user}:{message}";
            messages.Add(encodedMessage);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }

    private async Task Send()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("SendMessage", userInput, messageInput);
        }
    }

    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;
}